# docker-compose.yml
version: '3.8'

services:
  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_todos_list
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./src:/app/src:ro
      - ./config:/app/config:ro
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - todolist-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/v1/utils/health-check" ]
      interval: 10s
      timeout: 5s
      retries: 5


  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - todolist-network
    restart: unless-stopped

networks:
  todolist-network:
    driver: bridge
    name: todolist-network

volumes:
  postgres_data: